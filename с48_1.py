import logging
from my_token import TOKEN, OPENWEATHER_API_KEY, CBR_API_URL
import requests #–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –≤–Ω–µ—à–Ω–∏–º API
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext,MessageHandler,Filters,ConversationHandler
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove


logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',level=logging.INFO)
level=logging.INFO #–£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__) # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –ª–æ–≥–≥–µ—Ä–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –º–æ–¥—É–ª—è

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –±–æ—Ç–∞ (Conversation Handler)
WAIT_CITY, SHOW_INFO = range(2)  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞: –æ–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ –ø–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏

def create_main_menu_keyboard():
    keyboard = [
        [InlineKeyboardButton("üå§ –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É", callback_data='weather')],
        [
            InlineKeyboardButton("üí∂ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç", callback_data='currency'),
            InlineKeyboardButton("üñ• –ü–µ—Ä–µ–π—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω", url="https://zerocoder.ru")
        ]

    ]
    return InlineKeyboardMarkup(keyboard) # –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–º–µ—Ç–∫—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

def start(update: Update, context: CallbackContext) -> None:
    user = update.effective_user
    update.message.reply_text(
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –∏–ª–∏ –º–µ–Ω—é: ",
        reply_markup=create_main_menu_keyboard()
    )    

def button_click(update: Update, context: CallbackContext) -> None:
    query = update.callback_query # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–∏–∏
    query.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ callback (—É–±–∏—Ä–∞–µ—Ç "—á–∞—Å–∏–∫–∏" —É –∫–Ω–æ–ø–∫–∏)

    if query.data == "weather":
        query.message.reply_text(
               "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:",
            reply_markup=ReplyKeyboardRemove() # –£–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        )
        return WAIT_CITY # –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞
    elif query.data == 'currency':
        show_currency_rates(query) # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–∫–∞–∑–∞ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç
        return SHOW_INFO # –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    elif query.data == 'back_to_menu':
        query.edit_message_text(
            text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é: ",
            reply_markup=create_main_menu_keyboard()
        )
        return ConversationHandler.END # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
    elif query.data == 'close':
        query.delete_message()

def cancel (update:Update, context:CallbackContext) ->int:
    """–û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è"""
    update.message.reply_text("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=create_main_menu_keyboard()) # –í–æ–∑–≤—Ä–∞—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã 


def get_weather(update:Update, context:CallbackContext) ->int:
    city = update.message.text # –ü–æ–ª—É—á–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    url = f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={OPENWEATHER_API_KEY}&units=metric&lang=ru"
    try:
        response = requests.get(url) # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
        data = response.json() # –ü–∞—Ä—Å–∏–Ω–≥ –æ—Ç–≤–µ—Ç–∞ –≤ —Å–ª–æ–≤–∞—Ä—å
        if response.status_code ==200: # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞
            weather_info = (
                f" –ü–æ–≥–æ–¥–∞ –≤ {city}:\n"
                f" –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {data['main']['temp']} ¬∞C\n"
                f" –°–æ—Å—Ç–æ—è–Ω–∏–µ: {data['weather'][0]['description']} \n"
                f" –í–ª–∞–∂–Ω–æ—Å—Ç—å: {data['main']['humidity']} %\n"
                f" –í–µ—Ç–µ—Ä: {data['wind']['speed']} –º/—Å"
            )
                # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
            keyboard = [[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")]]
            update.message.reply_text(weather_info,reply_markup=InlineKeyboardMarkup(keyboard))
            return SHOW_INFO # –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        else:
            # –ï—Å–ª–∏ –≥–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω
            update.message.reply_text(" –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑: ")
            return WAIT_CITY # –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å –≥–æ—Ä–æ–¥–∞
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–≥–æ–¥–µ: {e}") # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
        update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")
        return ConversationHandler.END #–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞

def show_currency_rates(query):
    try:
        response = requests.get(CBR_API_URL) # API –∑–∞–ø—Ä–æ—Å –∫ –¶–ë
        data = response.json() # –ü–∞—Ä—Å–∏–Ω–≥ JSON-–æ—Ç–≤–µ—Ç–∞
        rates = data['Valute'] # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –≤–∞–ª—é—Ç–∞—Ö
        text = (
            f"–ö—É—Ä—Å—ã –¶–ë –†–§:\n"
            f"–î–æ–ª–ª–∞—Ä USA: {rates['USD']['Value']:.2f} ‚ÇΩ\n"
                        f"–ï–≤—Ä–æ: {rates['EUR']['Value']:.2f} ‚ÇΩ\n"
            f"–Æ–∞–Ω—å: {rates['CNY']['Value']:.2f} ‚ÇΩ\n"
        )
        keyboard = [[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")]]
        query.edit_message_text(
            text=text, reply_markup=InlineKeyboardMarkup(keyboard)
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç: {e}") # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
        query.edit_message_text ("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç") # –°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –¥–ª—è –±–æ—Ç–∞


def main():
    updater = Updater(TOKEN)
    dispatcher = updater.dispatcher

    conv_handler = ConversationHandler(
        entry_points=[CallbackQueryHandler(button_click, pattern='^weather$')],
                states={
            WAIT_CITY:[MessageHandler(Filters.text & ~Filters.command, get_weather)],
# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
            SHOW_INFO:[CallbackQueryHandler(button_click)] # –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        },
        fallbacks=[CommandHandler('cancel',cancel)], # –†–µ–∑–µ–≤—Ä–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã
        allow_reentry=True # –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –¥–∏–∞–ª–æ–≥
    )
    dispatcher.add_handler(conv_handler) # –î–∏–∞–ª–æ–≥ –ø–æ–≥–æ–¥—ã
    dispatcher.add_handler(CallbackQueryHandler(button_click, pattern='^(currency|back_to_menu|close)$')) # —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É
    dispatcher.add_handler(CommandHandler("start", start)) # —á–µ—Ä–µ–∑ /start
    dispatcher.add_handler(CallbackQueryHandler(button_click)) # —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É

    
    updater.start_polling()
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")

if __name__ == '__main__':    
    main()