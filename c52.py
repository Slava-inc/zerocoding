import requests
from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
from my_token import TOKEN

BITRIX_WEBHOOK_URL = 'https://b24-bm375m.bitrix24.ru/rest/1/01luvzkgcpg6ufwx/'
url = 'https://b24-bm375m.bitrix24.ru/rest/1/01luvzkgcpg6ufwx/profile.json'

def create_bitrix_lead(name: str, phone: str, comment: str = "") -> dict:
    url = f"{BITRIX_WEBHOOK_URL}crm.lead.add.json"
    data = {
        "fields": {
            "TITLE": f"–ó–∞—è–≤–∫–∞ –æ—Ç {name}",
            "NAME": name,
            "PHONE": [{"VALUE": phone}],
            "COMMENTS": f"–ò—Å—Ç–æ—á–Ω–∏–∫: Telegram Bot\n{comment}"
        }
    }
    response = requests.post(url, json=data)
    return response.json()

def start(update: Update, context: CallbackContext):
    update.message.reply_text(
        "üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
        "<b>–ò–º—è –¢–µ–ª–µ—Ñ–æ–Ω [–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π]</b>\n\n"
        "–ü—Ä–∏–º–µ—Ä: <code>–ò–≤–∞–Ω +79123456789 –•–æ—á—É —É–∑–Ω–∞—Ç—å –ø—Ä–æ —Å–∫–∏–¥–∫–∏</code>",
        parse_mode="HTML"
    )

def handle_message(update: Update, context: CallbackContext):
    try:
        text = update.message.text.split(maxsplit=2)
        name, phone = text[0], text[1]
        comment = text[2] if len(text) > 2 else ""
        result = create_bitrix_lead(name, phone, comment)
        if 'result' in result:
            update.message.reply_text(f"‚úÖ –ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞!\nID: {result['result']}")
        else:
            error = result.get('error_description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
            update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {error}")
    except Exception as e:
        update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞. –ü—Ä–∏–º–µ—Ä:\n<code>–ò–≤–∞–Ω +79123456789</code>", parse_mode="HTML")

def main():
    updater = Updater(TOKEN)
    dp = updater.dispatcher
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))
    updater.start_polling()
    updater.idle()

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")

if __name__ == '__main__':
    main()